library(forecast)
lynx
print(lynx)
Start(lynx)
start(lynx)
t=c(1:200)
t
t=c(1:200)
pib=200+ 4*t + rnorm(n=200)
pib
plot(pib)
pib=200+ 4*t + rnorm(n=200,mean=6)
plot(pib)
set.seed(100)
t=c(1:200)
pib=200+ 4*t + rnorm(n=200,mean=6)
plot(pib)
pib=200+ 4*t + rnorm(n=200,mean=6,sd=5)
plot(pib)
pib=200+ 4*t + rnorm(n=200,mean=10,sd=5)
plot(pib)
pib=200+ 4*t + rnorm(n=200,mean=100,sd=5)
plot(pib)
pib=200+ 4*t + rnorm(n=200,mean=100,sd=50)
plot(pib)
pib_ts=ts(pib, start=1820,frecuency =1 )
pib_ts=ts(pib, start=1820,frequency =1 )
pib_ts=ts(pib, start=c(1820,12),frequency =1 ) ##Convertir variable a serie de tiempo
pib_ts=ts(pib, start=1820,frequency =1 ) ##Convertir variable a serie de tiempo
plot(pib_ts)
print(pib_ts)
start(pib_ts)
pib_ts=ts(pib, start=1820,frequency =1 ) ##Convertir variable a serie de tiempo
plot(pib_ts) ### para grficar
print(pib_ts) ###Para ver información de la serie
start(pib_ts)
end(pib_ts)
frecuency(pib_ts)
frequency(pib_ts)
plot(pib_ts) ### para grficar
plot(pib_ts) ### para grficar
plot(pib)
plot(pib_ts) ### para grficar
m1=lm(pib_ts~t)
summary(m1)
summary(m1)
length(pib_ts)
n=length(pib_ts)
t1=c(1:n)
summary(m1)
set.seed(100) ###semilla
pib=200+ 4*t + rnorm(n=200,mean=100,sd=50) ###Crear variable ficticia
set.seed(100) ###semilla
t=c(1:200) ##Consecutivo del tiempo
pib=200+ 4*t + rnorm(n=200,mean=100,sd=50) ###Crear variable ficticia
pib_ts=ts(pib, start=1820,frequency =1 ) ##Convertir variable a serie de tiempo
plot(pib_ts) ### para grficar
print(pib_ts) ###Para ver información de la serie
n=length(pib_ts)
# propiedades de la serie de tiempo
start(pib_ts)
end(pib_ts)
frequency(pib_ts)
### Ajustar modelo de regresión lineal
m1=lm(pib_ts~t)
summary(m1)
plot(pib_ts) ### para grficar
plot(pib_ts) ### para grficar
set.seed(100) ###semilla
t=c(1:200) ##Consecutivo del tiempo
pib=200+ 4*t + 2*t^2 + rnorm(n=200,mean=100,sd=50)
mean(pib)
pib=200+ 4*t + 2*t^2 + rnorm(n=200,mean=1000,sd=500)
plot(pib)
plot(pib)
print(lynx)
plot(lynx)
plot(lynx)
length(lynx)
t=c(1:114)
m2=lm(lynx~t)
summary(m2)
summary(m2)
t=c(1:200)
t=c(1:200)
pib =200 + 4*t + rnorm(200,mean=10,sd=10)
plot(pib,type="line")
plot(pib,type="line")
pib =200 + 4*t + rnorm(200,mean=20,sd=20)
t=c(1:200)
pib =200 + 4*t + rnorm(200,mean=20,sd=20)
plot(pib,type="line")
pib_ts=ts(pib,start=1820,frequency = 1)
## gra
plot(pib)
pib_ts=ts(pib,start=1820,frequency = 1) ##Convertir a TS
## gra
plot(pib_Ts)
## gra
plot(pib_ts)
pib_train=window(pib_ts,end=1980)
pib_test=windows(pib_ts,start=1981)
pib_test=window(pib_ts,start=1981)
t_train=c(1:161)
t_test= c(162:200)
length(pib_train)
length(t_train)
datos_tiempo_train=data.frame("pib"=pib_train,"t"=t_train,"t2"=t_train^2)
datos_tiempo_test=data.frame("pib"=pib_test,"t"=t_test,"t2"=t_test^2)
mod1=lm(pib~t,data=datos_tiempo_train)
mod2=lm(pib~t2,data=datos_tiempo_train)
summary(mod1)
summary(mod1)
summary(mod2)
AIC(mod1)
AIC(mod2)
AIC(mod1)
AIC(mod2)
BIC(mod1)
BIC(mod2)
###mape Entrenamiento
predichos=predict(mod1)
####Para calculo de metricas como mape, mae y otros
install.packages("Metrics")
library(Metrics)
mape(pib_train,predichos)
mape(pib_train,predichos)*100
predichos2=predict(mod2)
mape(pib_train,predichos2)
mape(pib_train,predichos2)*100
predichos_e=predict(mod1,newdata = datos_tiempo_test)
mape(pib_test,predichos_e)
mape(pib_test,predichos_e)*100
predichos_e2=predict(mod2, newdata=datos_tiempo_test)
mape(pib_test,predichos_e2)
mape(pib_test,predichos_e2)*100
###mape Entrenamiento modelo 1
predichos=predict(mod1)
mape(pib_train,predichos)*100
predichos_e=predict(mod1,newdata = datos_tiempo_test)
mape(pib_test,predichos_e)*100
predichos2=predict(mod2)
mape(pib_train,predichos2)*100
predichos_e2=predict(mod2, newdata=datos_tiempo_test)
mape(pib_test,predichos_e2)*100
mae(pib_train,predichos)
mae(pib_train,predichos2)
mae(pib_test,predichos_e)
mae(pib_test,predichos_e2)
mae(pib_train,predichos2)
library(forecast)
install.packages("forecast")
install.packages("forecast")
library(forecast)
checkresiduals(mod1)
checkresiduals(mod1)
checkresiduals(mod2)
lynx
plot(lynx)
length(lynx)
lynx1=lynx[-114]
lynx2=lynx[-1]
cor(lynx1,lynx2)
lynx1=lynx[-c(114,113)]
lynx2=lynx[-c(1,2)]
cor(lynx1,lynx2)
library(car)
durbin.watson(lynx1,lynx2)
durbinWatsonTest(lynx1,lynx2)
cor(lynx1,lynx2)
library(lmtest)
dwtest(lynx1,lynx2)
dwtest(lynx1~lynx2)
dwtest(lynx1~lynx2)
acf(lynx)
par(mfrow=c(1,2))
acf(lynx)
pacf(lynx)
acf(lynx,plot=F)
pacf(lynx)
acf(lynx,plot=F)
acf(lynx,plot=F)
acf(lynx)
pacf(lynx)
pacf(lynx)
acf(lynx)
pacf(lynx)
acf(lynx, plot=F)
pacf(lynx,plot=F)
